{"version":3,"sources":["StudentEvaluation.ts","FirebaseConfig.ts","Database.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["calculateGrades","evaluations","config","map","evaluation","unitsGrade","units","reduce","acc","unit","length","finalGrade","unitsGradePercentage","dailyGrade","dailyGradePercentage","tasksGrade","tasksGradePercentage","Object","objectSpread","calculateGradesForEvaluation","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Database","classCallCheck","this","firestore","firebase","initializeApp","createClass","key","value","state","localStorage","setItem","JSON","stringify","unparsedState","getItem","parse","_saveStateOnCloud","asyncToGenerator","regenerator_default","a","mark","_callee","cleanedState","wrap","_context","prev","next","abrupt","collection","doc","set","stop","_x","apply","arguments","_getStateFromCloud","_callee2","stateRef","docData","flatState","_context2","sent","get","data","MyReactDataSheet","ReactDataSheet","database","defaultGradesConfig","columns","cellRenderer","props","style","padding","background","cell","readOnly","undefined","react_default","createElement","onMouseDown","onMouseOver","onDoubleClick","className","children","evaluationsToGrid","evaluationToGridRow","row","push","id","name","forEach","gridToEvaluations","grid","indexAfterUnits","slice","parseFloat","concat","gridRowToEvaluation","App","_React$Component","_this","possibleConstructorReturn","getPrototypeOf","call","getEmptyState","gradesConfig","currentEvaluation","nextConfigCandidate","nextConfigCandidateValid","deleteDialogShown","addRow","updateState","unitsGradeConfigChanged","valueNumber","parseInt","configCandidate","configPercentageChanged","tasksGradeConfigChanged","dailyGradeConfigChanged","newConfig","console","log","anEvaluation","updateEvaluations","callback","recalculatedEvaluations","recalculatedGrid","deleteStudentsWithoutName","filter","changeTitle","title","addEvaluation","Date","now","changeCurrentEvaluation","evaluationName","find","saveOnCloud","saveStateOnCloud","then","catch","error","showError","text","alert","setState","saveState","getState","getStateFromCloud","inherits","_this2","Pane","height","paddingLeft","paddingTop","paddingBottom","paddingRight","borderRadius","TextInput","onChange","e","target","Button","marginRight","appearance","onClick","Select","width","marginTop","event","App_MyReactDataSheet","valueRenderer","sheetRenderer","col","index","onCellsChanged","changes","toConsumableArray","_ref","isThereAnyStudentWithoutName","Text","isInvalid","Dialog","isShown","intent","confirmLabel","cancelLabel","onConfirm","onCancel","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c3756771.chunk.js","sourcesContent":["export interface StudentEvaluations {\n  name: string\n  evaluations: StudentEvaluation[]\n  gradesConfig: GradesConfig\n}\n\nexport interface StudentEvaluation {\n\tid: number\n\tname: string\n\tunits: number[]\n\tunitsGrade: number\n\ttasksGrade: number\n\tdailyGrade: number\n\tfinalGrade: number\n}\n\nexport interface GradesConfig {\n\tunitsGradePercentage: number\n\ttasksGradePercentage: number\n\tdailyGradePercentage: number\n}\n\nexport function isConfigValid(config: GradesConfig): boolean {\n\treturn config.unitsGradePercentage + config.tasksGradePercentage + config.dailyGradePercentage == 100\n}\n\nexport function calculateGrades(evaluations: StudentEvaluation[], config: GradesConfig): StudentEvaluation[] {\n\treturn evaluations.map((evaluation) => calculateGradesForEvaluation(evaluation, config))\n}\n\nexport function calculateGradesForEvaluation(evaluation: StudentEvaluation, config: GradesConfig): StudentEvaluation {\n\tconst unitsGrade = evaluation.units.reduce((acc, unit) => unit + acc, 0) / evaluation.units.length\n\tconst finalGrade = ((unitsGrade * config.unitsGradePercentage) + (evaluation.dailyGrade * config.dailyGradePercentage) + (evaluation.tasksGrade * config.tasksGradePercentage)) / 100\n\treturn {...evaluation, unitsGrade, finalGrade}\n}","export const firebaseConfig = {\n    apiKey: \"AIzaSyAquf-pSVDuRFdjOHK5g59Xkm4YnEW9wjk\",\n    authDomain: \"students-evaluations.firebaseapp.com\",\n    databaseURL: \"https://students-evaluations.firebaseio.com\",\n    projectId: \"students-evaluations\",\n    storageBucket: \"students-evaluations.appspot.com\",\n    messagingSenderId: \"414869975779\"\n  };","import firebase from \"firebase\";\nimport { StudentEvaluations } from \"./StudentEvaluation\";\nimport { firebaseConfig } from \"./FirebaseConfig\";\nimport App, { AppState } from \"./App\";\n\nconst stateKey = \"stateKey\"\n\nexport class Database {\n\n    private firestore: firebase.firestore.Firestore\n\n    constructor() {        \n        firebase.initializeApp(firebaseConfig);\n        this.firestore = firebase.firestore()\n    }\n\n    saveState(state: AppState) {\n        localStorage.setItem(\"appState\", JSON.stringify(state))\n    }\n\n    getState(): AppState | null {\n        const unparsedState = localStorage.getItem(\"appState\")\n        if(unparsedState) {\n            return JSON.parse(unparsedState)\n        } else {\n            return null\n        }\n    }\n\n    async saveStateOnCloud(state: AppState): Promise<any> {\n        const cleanedState = { state: JSON.stringify(state)}\n        return this.firestore.collection(\"StudentsEvaluationsState\").doc(stateKey).set(cleanedState)\n    }\n\n    async getStateFromCloud(): Promise<AppState | null> {\n        const stateRef = await this.firestore.collection(\"StudentsEvaluationsState\").doc(stateKey)\n        const doc = await stateRef.get()\n        const docData = doc.data()\n        if (docData) {\n            const flatState = docData.state as string\n            return JSON.parse(flatState) as AppState\n        } else {\n            return null\n        }\n    }\n\n}","import React, { } from 'react';\nimport './App.css';\nimport ReactDataSheet from 'react-datasheet';\nimport \"react-datasheet/lib/react-datasheet.css\";\nimport { Pane, Button, Text, Heading, Select, TextInput, Dialog, Alert } from 'evergreen-ui';\nimport { StudentEvaluation, StudentEvaluations, calculateGrades, GradesConfig, isConfigValid } from './StudentEvaluation';\nimport { Database } from './Database';\n\nexport interface GridElement extends ReactDataSheet.Cell<GridElement, number> {\n  value: string | number | null;\n}\n\nclass MyReactDataSheet extends ReactDataSheet<GridElement, number> { }\n\nexport interface AppState {\n  evaluations: StudentEvaluations[];\n  currentEvaluation: StudentEvaluations;\n  grid: GridElement[][];\n  nextConfigCandidate: GradesConfig;\n  nextConfigCandidateValid: boolean;\n  deleteDialogShown: boolean;\n}\n\nconst database = new Database()\n\nconst defaultGradesConfig = {\n  unitsGradePercentage: 40,\n  tasksGradePercentage: 40,\n  dailyGradePercentage: 20\n}\n\nconst columns = [\n  'Nombre alumno',\n  'Unidad 1',\n  'Unidad 2',\n  'Unidad 3',\n  'Unidad 4',\n  'Unidad 5',\n  'Unidad 6',\n  'Unidad 7',\n  'Unidad 8',\n  'Unidad 9',\n  'Unidad 10',\n  'Pruebas',\n  'Cuadernos y tareas',\n  'Observación diaria',\n  'Nota final'\n];\n\n//You can also strongly type all the Components or SFCs that you pass into ReactDataSheet.\nconst cellRenderer: ReactDataSheet.CellRenderer<GridElement, number> = (props) => {\n  const color = props.cell.readOnly ? 'grey' : undefined\n  const style = { padding: '16px', background: color };\n  return (\n    <td style={style} onMouseDown={props.onMouseDown} onMouseOver={props.onMouseOver} onDoubleClick={props.onDoubleClick} className=\"cell\">\n      {props.children}\n    </td>\n  )\n}\n\nfunction evaluationsToGrid(evaluations: StudentEvaluation[]): GridElement[][] {\n  return evaluations.map((evaluation) => {\n    return evaluationToGridRow(evaluation)\n  })\n}\n\nfunction evaluationToGridRow(evaluation: StudentEvaluation): GridElement[] {\n  const row: GridElement[] = [];\n\n  row.push({ value: evaluation.id, readOnly: true })\n  row.push({ value: evaluation.name })\n  evaluation.units.forEach((unit) => {\n    row.push({ value: unit })\n  })\n  row.push({ value: evaluation.unitsGrade, readOnly: true })\n  row.push({ value: evaluation.tasksGrade })\n  row.push({ value: evaluation.dailyGrade })\n  row.push({ value: evaluation.finalGrade, readOnly: true })\n\n  return row\n}\n\nfunction gridToEvaluations(grid: GridElement[][]): StudentEvaluation[] {\n  return grid.map((row) => gridRowToEvaluation(row))\n}\n\nfunction gridRowToEvaluation(row: GridElement[]): StudentEvaluation {\n  const fixedFields = 6\n  const numberOfUnits = row.length - fixedFields\n  const indexAfterUnits = 2 + numberOfUnits\n\n  const id = row[0].value as number\n  const name = row[1].value as string\n  const units = row.slice(2, indexAfterUnits).map((unit) => parseFloat(`${unit.value}` || \"0\"))\n  const unitsGrade = parseFloat(`${row[indexAfterUnits].value}` || \"0\")\n  const tasksGrade = parseFloat(`${row[indexAfterUnits + 1].value}` || \"0\")\n  const dailyGrade = parseFloat(`${row[indexAfterUnits + 2].value}` || \"0\")\n  const finalGrade = parseFloat(`${row[indexAfterUnits + 3].value}` || \"0\")\n\n  return {\n    id,\n    name,\n    units,\n    unitsGrade,\n    tasksGrade,\n    dailyGrade,\n    finalGrade\n  }\n}\n\nfunction isThereAnyStudentWithoutName(evaluations: StudentEvaluation[]): boolean {\n  const studentWithoutName = evaluations.find((evaluation) => !evaluation.name)\n  return studentWithoutName ? true : false\n}\n\nexport class App extends React.Component<{}, AppState> {\n  constructor(props: {}) {\n    super(props)\n    this.state = database.getState() || this.getEmptyState()\n\n    database.getStateFromCloud()\n      .then((state) => {\n        if (state) {\n          this.setState(state)\n        } else {\n          console.log(\"Cloud state is empty\")\n        }\n      })\n      .catch((error) => {\n        this.showError(\"Error al recuperar datos de la nube. Compruebe su conexión a internet y recargue la página.\")\n        console.log(error)\n      })\n  }\n\n  getEmptyState = () => {\n    const firstEvaluation = { id: 1, name: \"Ricardo Pallás\", units: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], unitsGrade: 0, tasksGrade: 0, dailyGrade: 0, finalGrade: 0 }\n    const evaluation: StudentEvaluations = { name: \"Lengua - Primer trimestre 2019\", evaluations: [firstEvaluation], gradesConfig: defaultGradesConfig }\n    return {\n      evaluations: [evaluation],\n      currentEvaluation: evaluation,\n      grid: evaluationsToGrid(evaluation.evaluations),\n      nextConfigCandidate: defaultGradesConfig,\n      nextConfigCandidateValid: true,\n      deleteDialogShown: false\n    } as AppState\n  }\n\n  addRow = () => {\n    const lastId = this.state.currentEvaluation.evaluations.length > 0 ? this.state.currentEvaluation.evaluations[this.state.currentEvaluation.evaluations.length - 1].id : 0\n    const evaluation = { id: lastId + 1, name: \"Ricardo Pallás\", units: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], unitsGrade: 0, tasksGrade: 0, dailyGrade: 0, finalGrade: 0 }\n    this.state.currentEvaluation.evaluations.push(evaluation)\n    this.state.grid.push(evaluationToGridRow(evaluation))\n    this.updateState(this.state)\n  }\n\n  unitsGradeConfigChanged = (value: string) => {\n    const valueNumber = parseInt(value, 10) || 0;\n    const configCandidate = { ...this.state.nextConfigCandidate, unitsGradePercentage: valueNumber }\n    this.configPercentageChanged(configCandidate)\n  }\n\n  tasksGradeConfigChanged = (value: string) => {\n    const valueNumber = parseInt(value, 10) || 0;\n    const configCandidate = { ...this.state.nextConfigCandidate, tasksGradePercentage: valueNumber }\n    this.configPercentageChanged(configCandidate)\n  }\n\n  dailyGradeConfigChanged = (value: string) => {\n    const valueNumber = parseInt(value, 10) || 0;\n    const configCandidate = { ...this.state.nextConfigCandidate, dailyGradePercentage: valueNumber }\n    this.configPercentageChanged(configCandidate)\n  }\n\n  configPercentageChanged = (newConfig: GradesConfig) => {\n    console.log(newConfig)\n    if (isConfigValid(newConfig)) {\n      this.updateState({ ...this.state, nextConfigCandidate: newConfig, currentEvaluation: { ...this.state.currentEvaluation, gradesConfig: newConfig }, nextConfigCandidateValid: true }, () => {\n        const evaluations = this.state.evaluations.map((anEvaluation) => {\n          if (anEvaluation.name === this.state.currentEvaluation.name) {\n            anEvaluation.gradesConfig = newConfig\n          }\n          return anEvaluation\n        })\n\n        this.updateState({ ...this.state, evaluations }, () => {\n          this.updateEvaluations(this.state.currentEvaluation.evaluations, newConfig)\n        })\n      })\n    } else {\n      this.updateState({ ...this.state, nextConfigCandidate: newConfig, nextConfigCandidateValid: false })\n    }\n  }\n\n  updateEvaluations = (evaluations: StudentEvaluation[], config: GradesConfig, callback?: () => void) => {\n    const recalculatedEvaluations = calculateGrades(evaluations, config)\n    const recalculatedGrid = evaluationsToGrid(recalculatedEvaluations)\n    const evaluation = { ...this.state.currentEvaluation, evaluations: recalculatedEvaluations }\n\n    this.updateState({ ...this.state, grid: recalculatedGrid, currentEvaluation: evaluation }, callback)\n  }\n\n  deleteStudentsWithoutName = () => {\n    const evaluations = this.state.currentEvaluation.evaluations.filter((evaluation) => evaluation.name)\n    this.updateState({ ...this.state, deleteDialogShown: false }, () => {\n      this.updateEvaluations(evaluations, this.state.currentEvaluation.gradesConfig)\n    })\n  }\n\n  changeTitle = (title: string) => {\n    const currentEvaluation = { ...this.state.currentEvaluation, name: title }\n    const evaluations = this.state.evaluations.map((evaluation) => {\n      if (evaluation.name === this.state.currentEvaluation.name) {\n        evaluation.name = title\n      }\n      return evaluation\n    })\n    this.updateState({ ...this.state, currentEvaluation, evaluations })\n  }\n\n  addEvaluation = () => {\n    const firstEvaluation = { id: 1, name: \"Ricardo Pallás\", units: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], unitsGrade: 0, tasksGrade: 0, dailyGrade: 0, finalGrade: 0 }\n    const evaluation = { name: \"Nueva evaluación \" + Date.now(), evaluations: [firstEvaluation], gradesConfig: defaultGradesConfig }\n    const evaluations = this.state.evaluations.concat(evaluation)\n    this.updateState({ ...this.state, evaluations }, () => {\n      this.changeCurrentEvaluation(evaluation.name)\n    })\n\n  }\n\n  changeCurrentEvaluation = (evaluationName: string) => {\n    // TODO refactor as save current evaluation grades\n    const currentEvaluation = this.state.currentEvaluation\n    const recalculatedEvaluations = calculateGrades(currentEvaluation.evaluations, currentEvaluation.gradesConfig)\n    const evaluations = this.state.evaluations.map((anEvaluation) => {\n      if (anEvaluation.name === currentEvaluation.name) {\n        anEvaluation.evaluations = recalculatedEvaluations\n      }\n      return anEvaluation\n    })\n\n    this.updateState({ ...this.state, evaluations }, () => {\n      const evaluation = this.state.evaluations.find((evaluation) => (evaluation.name === evaluationName))\n\n      if (evaluation) {\n        const grid = evaluationsToGrid(evaluation.evaluations)\n        this.updateState({ ...this.state, currentEvaluation: evaluation, grid, nextConfigCandidate: evaluation.gradesConfig })\n      }\n    })\n  }\n\n  saveOnCloud = () => {\n    database.saveStateOnCloud(this.state)\n      .then(() => {\n        console.log(\"Saved on cloud\")\n      })\n      .catch((error) => {\n        this.showError(\"Error al guardar datos en la nube. Compruebe conexión a internet e inténtelo otra vez.\")\n        console.log(`Error while saving on cloud: ${error}`)\n      }) \n  }\n\n  showError = (text: string) => {\n    alert(text)\n  }\n\n  updateState = (state: AppState, callback?: () => void) => {\n    this.setState(state, () => {\n      database.saveState(state)\n      if(callback){\n        callback()\n      }\n    })\n  }\n\n  render() {\n    return (\n      <Pane height=\"100%\" paddingLeft={32} paddingTop={32} paddingBottom={32} paddingRight={32} background=\"tint2\" borderRadius={3}>\n        <TextInput\n          name=\"text-input-name\"\n          className=\"title\"\n          onChange={(e: any) => this.changeTitle(e.target.value)}\n          value={this.state.currentEvaluation.name} />\n\n\n        <Button className=\"saveOnCloudButton\" marginRight={16} appearance=\"primary\" onClick={this.saveOnCloud}>Guardar en la nube</Button>\n\n\n        <Pane>\n          <Select width={240} marginTop={16} value={this.state.currentEvaluation.name} onChange={(event: any) => this.changeCurrentEvaluation(event.target.value)}>\n            {this.state.evaluations.map((evaluation) => (<option value={evaluation.name}>{evaluation.name}</option>))}\n          </Select>\n          <Button marginRight={16} appearance=\"primary\" onClick={this.addEvaluation}>Añadir tabla</Button>\n        </Pane>\n\n        <Pane marginTop={48}>\n          <MyReactDataSheet\n            data={this.state.grid}\n            valueRenderer={(cell) => cell.value}\n            sheetRenderer={props => (\n              <table className={props.className}>\n                <thead>\n                  <tr>\n                    <th className='action-cell' />\n                    {columns.map((col, index) => (<th key={index} className='rotate'> <div><span>{col} </span></div></th>))}\n                  </tr>\n                </thead>\n                <tbody>\n                  {props.children}\n                </tbody>\n              </table>\n            )}\n            onCellsChanged={changes => {\n              const grid = this.state.grid.map(row => [...row])\n              changes.forEach(({ cell, row, col, value }) => {\n                grid[row][col] = { ...grid[row][col], value }\n              })\n              const evaluations = gridToEvaluations(grid)\n              const config = this.state.currentEvaluation.gradesConfig\n              this.updateEvaluations(evaluations, config, () => {\n                if (isThereAnyStudentWithoutName(evaluations)) {\n                  this.updateState({ ...this.state, deleteDialogShown: true })\n                }\n              })\n            }}\n            cellRenderer={cellRenderer}\n          />\n        </Pane>\n\n        <Button marginTop={16} onClick={this.addRow} appearance=\"primary\">Añadir fila</Button>\n\n        <Pane marginTop={48}>\n          <Text className=\"configPercentageText\" width={210} marginRight={4}>Porcentaje pruebas: </Text>\n          <TextInput isInvalid={!this.state.nextConfigCandidateValid} width={40} onChange={(e: any) => this.unitsGradeConfigChanged(e.target.value)} value={this.state.nextConfigCandidate.unitsGradePercentage}></TextInput>\n        </Pane>\n\n        <Pane marginTop={4}>\n          <Text className=\"configPercentageText\" width={210} marginRight={4}>Porcentaje cuadernos y tareas: </Text>\n          <TextInput isInvalid={!this.state.nextConfigCandidateValid} width={40} onChange={(e: any) => this.tasksGradeConfigChanged(e.target.value)} value={this.state.nextConfigCandidate.tasksGradePercentage}></TextInput>\n        </Pane>\n\n        <Pane marginTop={4}>\n          <Text className=\"configPercentageText\" width={210} marginRight={4}>Porcentaje observación diaria: </Text>\n          <TextInput isInvalid={!this.state.nextConfigCandidateValid} width={40} onChange={(e: any) => this.dailyGradeConfigChanged(e.target.value)} value={this.state.nextConfigCandidate.dailyGradePercentage}></TextInput>\n        </Pane>\n\n        <Dialog\n          isShown={this.state.deleteDialogShown}\n          title=\"Borrar almuno\"\n          intent=\"danger\"\n          confirmLabel=\"Sí\"\n          cancelLabel=\"No\"\n          onConfirm={this.deleteStudentsWithoutName}\n          onCancel={() => (this.updateState({ ...this.state, deleteDialogShown: false }))}>\n          ¿Desea borrar el alumno?\n      </Dialog>\n\n      </Pane>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}