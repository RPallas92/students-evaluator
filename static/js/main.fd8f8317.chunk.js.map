{"version":3,"sources":["StudentEvaluation.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["calculateGrades","evaluations","config","map","evaluation","unitsGrade","units","reduce","acc","unit","length","finalGrade","unitsGradePercentage","dailyGrade","dailyGradePercentage","tasksGrade","tasksGradePercentage","Object","objectSpread","calculateGradesForEvaluation","MyReactDataSheet","ReactDataSheet","defaultGradesConfig","columns","cellRenderer","props","style","padding","background","cell","readOnly","undefined","react_default","a","createElement","onMouseDown","onMouseOver","onDoubleClick","className","children","evaluationsToGrid","evaluationToGridRow","row","push","value","id","name","forEach","gridToEvaluations","grid","indexAfterUnits","slice","parseFloat","concat","gridRowToEvaluation","App","_React$Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addRow","state","currentEvaluation","setState","unitsGradeConfigChanged","valueNumber","parseInt","configCandidate","nextConfigCandidate","configPercentageChanged","tasksGradeConfigChanged","dailyGradeConfigChanged","newConfig","console","log","gradesConfig","nextConfigCandidateValid","anEvaluation","updateEvaluations","callback","recalculatedEvaluations","recalculatedGrid","deleteStudentsWithoutName","filter","deleteDialogShown","changeTitle","title","addEvaluation","Date","now","changeCurrentEvaluation","evaluationName","find","inherits","createClass","key","_this2","Pane","height","paddingLeft","paddingTop","paddingBottom","paddingRight","borderRadius","TextInput","onChange","e","target","Select","width","marginTop","event","Button","marginLeft","appearance","onClick","App_MyReactDataSheet","data","valueRenderer","sheetRenderer","col","index","onCellsChanged","changes","toConsumableArray","_ref","isThereAnyStudentWithoutName","Text","marginRight","isInvalid","Dialog","isShown","intent","confirmLabel","cancelLabel","onConfirm","onCancel","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fd8f8317.chunk.js","sourcesContent":["export interface StudentEvaluations {\n  name: string\n  evaluations: StudentEvaluation[]\n  gradesConfig: GradesConfig\n}\n\nexport interface StudentEvaluation {\n\tid: number\n\tname: string\n\tunits: number[]\n\tunitsGrade: number\n\ttasksGrade: number\n\tdailyGrade: number\n\tfinalGrade: number\n}\n\nexport interface GradesConfig {\n\tunitsGradePercentage: number\n\ttasksGradePercentage: number\n\tdailyGradePercentage: number\n}\n\nexport function isConfigValid(config: GradesConfig): boolean {\n\treturn config.unitsGradePercentage + config.tasksGradePercentage + config.dailyGradePercentage == 100\n}\n\nexport function calculateGrades(evaluations: StudentEvaluation[], config: GradesConfig): StudentEvaluation[] {\n\treturn evaluations.map((evaluation) => calculateGradesForEvaluation(evaluation, config))\n}\n\nexport function calculateGradesForEvaluation(evaluation: StudentEvaluation, config: GradesConfig): StudentEvaluation {\n\tconst unitsGrade = evaluation.units.reduce((acc, unit) => unit + acc, 0) / evaluation.units.length\n\tconst finalGrade = ((unitsGrade * config.unitsGradePercentage) + (evaluation.dailyGrade * config.dailyGradePercentage) + (evaluation.tasksGrade * config.tasksGradePercentage)) / 100\n\treturn {...evaluation, unitsGrade, finalGrade}\n}","import React, {  } from 'react';\nimport './App.css';\nimport ReactDataSheet from 'react-datasheet';\nimport \"react-datasheet/lib/react-datasheet.css\";\nimport { Pane, Button, Text, Heading, Select, TextInput, Dialog } from 'evergreen-ui';\nimport { StudentEvaluation, StudentEvaluations, calculateGrades, GradesConfig, isConfigValid } from './StudentEvaluation';\n\nexport interface GridElement extends ReactDataSheet.Cell<GridElement, number> {\n  value: string | number | null;\n}\n\nclass MyReactDataSheet extends ReactDataSheet<GridElement, number> { }\n\ninterface AppState {\n  evaluations: StudentEvaluations[];\n  currentEvaluation: StudentEvaluations;\n  grid: GridElement[][];\n  nextConfigCandidate: GradesConfig;\n  nextConfigCandidateValid: boolean;\n  deleteDialogShown: boolean;\n}\n\nconst defaultGradesConfig = {\n  unitsGradePercentage: 40,\n  tasksGradePercentage: 40,\n  dailyGradePercentage: 20\n}\n\nconst columns = [\n  'Nombre alumno',\n  'Unidad 1',\n  'Unidad 2',\n  'Unidad 3',\n  'Unidad 4',\n  'Unidad 5',\n  'Unidad 6',\n  'Unidad 7',\n  'Unidad 8',\n  'Unidad 9',\n  'Unidad 10',\n  'Pruebas',\n  'Cuadernos y tareas',\n  'Observación diaria',\n  'Nota final'\n];\n\n//You can also strongly type all the Components or SFCs that you pass into ReactDataSheet.\nconst cellRenderer: ReactDataSheet.CellRenderer<GridElement, number> = (props) => {\n  const color = props.cell.readOnly ? 'grey' : undefined\n  const style = { padding: '16px', background: color };\n  return (\n    <td style={style} onMouseDown={props.onMouseDown} onMouseOver={props.onMouseOver} onDoubleClick={props.onDoubleClick} className=\"cell\">\n      {props.children}\n    </td>\n  )\n}\n\nfunction evaluationsToGrid(evaluations: StudentEvaluation[]): GridElement[][] {\n  return evaluations.map((evaluation) => {\n    return evaluationToGridRow(evaluation)\n  })\n}\n\nfunction evaluationToGridRow(evaluation: StudentEvaluation): GridElement[] {\n  const row: GridElement[] = [];\n\n  row.push({ value: evaluation.id, readOnly: true })\n  row.push({ value: evaluation.name })\n  evaluation.units.forEach((unit) => {\n    row.push({ value: unit })\n  })\n  row.push({ value: evaluation.unitsGrade, readOnly: true })\n  row.push({ value: evaluation.tasksGrade })\n  row.push({ value: evaluation.dailyGrade })\n  row.push({ value: evaluation.finalGrade, readOnly: true })\n\n  return row\n}\n\nfunction gridToEvaluations(grid: GridElement[][]): StudentEvaluation[] {\n  return grid.map((row) => gridRowToEvaluation(row))\n}\n\nfunction gridRowToEvaluation(row: GridElement[]): StudentEvaluation {\n  const fixedFields = 6\n  const numberOfUnits = row.length - fixedFields\n  const indexAfterUnits = 2 + numberOfUnits\n\n  const id = row[0].value as number\n  const name = row[1].value as string\n  const units = row.slice(2, indexAfterUnits).map((unit) => parseFloat(`${unit.value}` || \"0\"))\n  const unitsGrade = parseFloat(`${row[indexAfterUnits].value}` || \"0\")\n  const tasksGrade = parseFloat(`${row[indexAfterUnits + 1].value}` || \"0\")\n  const dailyGrade = parseFloat(`${row[indexAfterUnits + 2].value}` || \"0\")\n  const finalGrade = parseFloat(`${row[indexAfterUnits + 3].value}` || \"0\")\n\n  return {\n    id,\n    name,\n    units,\n    unitsGrade,\n    tasksGrade,\n    dailyGrade,\n    finalGrade\n  }\n}\n\nfunction isThereAnyStudentWithoutName(evaluations: StudentEvaluation[]): boolean {\n  const studentWithoutName = evaluations.find((evaluation) => !evaluation.name)\n  return studentWithoutName ? true : false\n}\n\nexport class App extends React.Component<{}, AppState> {\n  constructor(props: {}) {\n    super(props)\n\n    const firstEvaluation = { id: 1, name: \"Ricardo Pallás\", units: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], unitsGrade: 0, tasksGrade: 0, dailyGrade: 0, finalGrade: 0 }\n    const evaluation: StudentEvaluations = { name: \"Lengua - Primer trimestre 2019\", evaluations: [firstEvaluation], gradesConfig: defaultGradesConfig}\n    this.state = {\n      evaluations: [evaluation],\n      currentEvaluation: evaluation,\n      grid: evaluationsToGrid(evaluation.evaluations),\n      nextConfigCandidate: defaultGradesConfig,\n      nextConfigCandidateValid: true,\n      deleteDialogShown: false\n    }\n  }\n\n  addRow = () => {\n    const lastId = this.state.currentEvaluation.evaluations.length > 0 ? this.state.currentEvaluation.evaluations[this.state.currentEvaluation.evaluations.length - 1].id : 0\n    const evaluation = { id: lastId + 1, name: \"Ricardo Pallás\", units: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], unitsGrade: 0, tasksGrade: 0, dailyGrade: 0, finalGrade: 0 }\n    this.state.currentEvaluation.evaluations.push(evaluation)\n    this.state.grid.push(evaluationToGridRow(evaluation))\n    this.setState(this.state)\n  }\n\n  unitsGradeConfigChanged = (value: string) => {\n    const valueNumber = parseInt(value, 10) || 0;\n    const configCandidate = { ...this.state.nextConfigCandidate, unitsGradePercentage: valueNumber }\n    this.configPercentageChanged(configCandidate)\n  }\n\n  tasksGradeConfigChanged = (value: string) => {\n    const valueNumber = parseInt(value, 10) || 0;\n    const configCandidate = { ...this.state.nextConfigCandidate, tasksGradePercentage: valueNumber }\n    this.configPercentageChanged(configCandidate)\n  }\n\n  dailyGradeConfigChanged = (value: string) => {\n    const valueNumber = parseInt(value, 10) || 0;\n    const configCandidate = { ...this.state.nextConfigCandidate, dailyGradePercentage: valueNumber }\n    this.configPercentageChanged(configCandidate)\n  }\n\n  configPercentageChanged = (newConfig: GradesConfig) => {\n    console.log(newConfig)\n    if (isConfigValid(newConfig)) {\n      this.setState({ ...this.state, nextConfigCandidate: newConfig, currentEvaluation: {...this.state.currentEvaluation, gradesConfig: newConfig}, nextConfigCandidateValid: true }, () => {\n        const evaluations = this.state.evaluations.map((anEvaluation) => {\n          if (anEvaluation.name === this.state.currentEvaluation.name) {\n            anEvaluation.gradesConfig = newConfig\n          }\n          return anEvaluation\n        })\n\n        this.setState({...this.state, evaluations}, () => {\n          this.updateEvaluations(this.state.currentEvaluation.evaluations, newConfig)\n        })\n      })\n    } else {\n      this.setState({ ...this.state, nextConfigCandidate: newConfig, nextConfigCandidateValid: false })\n    }\n  }\n\n  updateEvaluations = (evaluations: StudentEvaluation[], config: GradesConfig, callback?: () => void) => {\n    const recalculatedEvaluations = calculateGrades(evaluations, config)\n    const recalculatedGrid = evaluationsToGrid(recalculatedEvaluations)\n    const evaluation = { ...this.state.currentEvaluation, evaluations: recalculatedEvaluations}\n\n    this.setState({ ...this.state, grid: recalculatedGrid, currentEvaluation: evaluation}, callback)\n  }\n\n  deleteStudentsWithoutName = () => {\n    const evaluations = this.state.currentEvaluation.evaluations.filter((evaluation) => evaluation.name)\n    this.setState({ ...this.state, deleteDialogShown: false }, () => {\n      this.updateEvaluations(evaluations, this.state.currentEvaluation.gradesConfig)\n    })\n  }\n\n  changeTitle = (title: string) => {\n    const currentEvaluation = {...this.state.currentEvaluation, name: title}\n    const evaluations = this.state.evaluations.map((evaluation) => {\n      if (evaluation.name === this.state.currentEvaluation.name) {\n        evaluation.name = title\n      }\n      return evaluation\n    })\n    this.setState({...this.state, currentEvaluation, evaluations})\n  }\n\n  addEvaluation = () => {\n    const firstEvaluation = { id: 1, name: \"Ricardo Pallás\", units: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], unitsGrade: 0, tasksGrade: 0, dailyGrade: 0, finalGrade: 0 }\n    const evaluation = { name: \"Nueva evaluación \" + Date.now(), evaluations: [firstEvaluation], gradesConfig: defaultGradesConfig}\n    const evaluations = this.state.evaluations.concat(evaluation)\n    this.setState({...this.state, evaluations}, () => {\n      this.changeCurrentEvaluation(evaluation.name)\n    })\n  }\n\n  changeCurrentEvaluation = (evaluationName: string) => {\n    // TODO refactor as save current evaluation grades\n    const currentEvaluation = this.state.currentEvaluation\n    const recalculatedEvaluations = calculateGrades(currentEvaluation.evaluations, currentEvaluation.gradesConfig)\n    const evaluations = this.state.evaluations.map((anEvaluation) => {\n      if(anEvaluation.name === currentEvaluation.name) {\n        anEvaluation.evaluations = recalculatedEvaluations\n      }\n      return anEvaluation\n    })\n\n    this.setState({...this.state, evaluations}, () => {\n      const evaluation = this.state.evaluations.find((evaluation) => (evaluation.name === evaluationName))\n\n      if (evaluation) {\n        const grid = evaluationsToGrid(evaluation.evaluations)\n        this.setState({...this.state, currentEvaluation: evaluation, grid, nextConfigCandidate: evaluation.gradesConfig})\n      }\n    })\n  }\n\n  render() {\n    return (\n      <Pane height=\"100%\" paddingLeft={32} paddingTop={32} paddingBottom={32} paddingRight={32} background=\"tint2\" borderRadius={3}>\n        <TextInput\n          name=\"text-input-name\"\n          className=\"title\"\n          onChange={(e: any) => this.changeTitle(e.target.value)}\n          value={this.state.currentEvaluation.name} />\n\n        <Pane >\n          <Select width={240} marginTop={16} value={this.state.currentEvaluation.name} onChange={(event:any) => this.changeCurrentEvaluation(event.target.value)}>\n            {this.state.evaluations.map((evaluation) => (<option value={evaluation.name}>{evaluation.name}</option>))}\n          </Select>\n          <Button marginLeft={16} appearance=\"primary\" onClick={this.addEvaluation}>Añadir tabla</Button>\n        </Pane>\n\n        <Pane marginTop={48}>\n          <MyReactDataSheet\n            data={this.state.grid}\n            valueRenderer={(cell) => cell.value}\n            sheetRenderer={props => (\n              <table className={props.className}>\n                <thead>\n                  <tr>\n                    <th className='action-cell' />\n                    {columns.map((col, index) => (<th key={index} className='rotate'> <div><span>{col} </span></div></th>))}\n                  </tr>\n                </thead>\n                <tbody>\n                  {props.children}\n                </tbody>\n              </table>\n            )}\n            onCellsChanged={changes => {\n              const grid = this.state.grid.map(row => [...row])\n              changes.forEach(({ cell, row, col, value }) => {\n                grid[row][col] = { ...grid[row][col], value }\n              })\n              const evaluations = gridToEvaluations(grid)\n              const config = this.state.currentEvaluation.gradesConfig\n              this.updateEvaluations(evaluations, config, () => {\n                if (isThereAnyStudentWithoutName(evaluations)) {\n                  this.setState({ ...this.state, deleteDialogShown: true })\n                }\n              })\n            }}\n            cellRenderer={cellRenderer}\n          />\n        </Pane>\n\n        <Button marginTop={16} onClick={this.addRow} appearance=\"primary\">Añadir fila</Button>\n\n        <Pane marginTop={48}>\n          <Text className=\"configPercentageText\" width={210} marginRight={4}>Porcentaje pruebas: </Text>\n          <TextInput isInvalid={!this.state.nextConfigCandidateValid} width={40} onChange={(e: any) => this.unitsGradeConfigChanged(e.target.value)} value={this.state.nextConfigCandidate.unitsGradePercentage}></TextInput>\n        </Pane>\n\n        <Pane marginTop={4}>\n          <Text className=\"configPercentageText\" width={210} marginRight={4}>Porcentaje cuadernos y tareas: </Text>\n          <TextInput isInvalid={!this.state.nextConfigCandidateValid} width={40} onChange={(e: any) => this.tasksGradeConfigChanged(e.target.value)} value={this.state.nextConfigCandidate.tasksGradePercentage}></TextInput>\n        </Pane>\n\n        <Pane marginTop={4}>\n          <Text className=\"configPercentageText\" width={210} marginRight={4}>Porcentaje observación diaria: </Text>\n          <TextInput isInvalid={!this.state.nextConfigCandidateValid} width={40} onChange={(e: any) => this.dailyGradeConfigChanged(e.target.value)} value={this.state.nextConfigCandidate.dailyGradePercentage}></TextInput>\n        </Pane>\n\n        <Dialog\n          isShown={this.state.deleteDialogShown}\n          title=\"Borrar almuno\"\n          intent=\"danger\"\n          confirmLabel=\"Sí\"\n          cancelLabel=\"No\"\n          onConfirm={this.deleteStudentsWithoutName}\n          onCancel={() => (this.setState({ ...this.state, deleteDialogShown: false }))}>\n          ¿Desea borrar el alumno?\n      </Dialog>\n\n      </Pane>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}